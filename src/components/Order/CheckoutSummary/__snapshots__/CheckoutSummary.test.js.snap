// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CheckoutSummary /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <checkoutSummary
    ingredients={Array []}
    price={0}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          We hope it tastes well!
</h1>,
        <div
          style={
                    Object {
                              "margin": "auto",
                              "width": "100%",
                            }
          }
>
          <burger
                    ingredients={Array []}
          />
</div>,
        <button
          btnType="Danger"
          clicked={undefined}
>
          CANCEL
</button>,
        <button
          btnType="Success"
          clicked={undefined}
>
          CONTINUE
</button>,
      ],
      "className": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "We hope it tastes well!",
        },
        "ref": null,
        "rendered": "We hope it tastes well!",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <burger
            ingredients={Array []}
/>,
          "style": Object {
            "margin": "auto",
            "width": "100%",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "ingredients": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "btnType": "Danger",
          "children": "CANCEL",
          "clicked": undefined,
        },
        "ref": null,
        "rendered": "CANCEL",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "btnType": "Success",
          "children": "CONTINUE",
          "clicked": undefined,
        },
        "ref": null,
        "rendered": "CONTINUE",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            We hope it tastes well!
</h1>,
          <div
            style={
                        Object {
                                    "margin": "auto",
                                    "width": "100%",
                                  }
            }
>
            <burger
                        ingredients={Array []}
            />
</div>,
          <button
            btnType="Danger"
            clicked={undefined}
>
            CANCEL
</button>,
          <button
            btnType="Success"
            clicked={undefined}
>
            CONTINUE
</button>,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "We hope it tastes well!",
          },
          "ref": null,
          "rendered": "We hope it tastes well!",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <burger
              ingredients={Array []}
/>,
            "style": Object {
              "margin": "auto",
              "width": "100%",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "ingredients": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "btnType": "Danger",
            "children": "CANCEL",
            "clicked": undefined,
          },
          "ref": null,
          "rendered": "CANCEL",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "btnType": "Success",
            "children": "CONTINUE",
            "clicked": undefined,
          },
          "ref": null,
          "rendered": "CONTINUE",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
